{"version":3,"sources":["components/section/Section.js","components/feedback/Feedback.js","components/statistic/Statistic.js","components/App.js","index.js"],"names":["Section","title","children","Feedback","options","feedbackEvent","map","el","key","name","onClick","event","Statistic","good","neutral","bad","total","countPercentage","objState","App","state","persist","setState","prevState","target","totalFeedback","Math","round","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEO,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACI,oCACI,4BAAKD,GACL,6BAAMC,ICJX,SAASC,EAAT,GAA+C,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAClC,OACE,oCACGD,EAAQE,KAAI,SAAAC,GAAE,OACX,4BAAQC,IAAKD,EAAIE,KAAMF,EAAIG,QAAS,SAAAC,GAAK,OAAIN,EAAcM,KAC1DJ,OCLJ,IAAMK,EAAY,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBACrD,OACE,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,OCJAC,EAAW,CACbL,KAAM,EACNC,QAAS,EACTC,IAAK,GAGYI,E,4MACjBC,M,eAAaF,G,EAEfb,cAAgB,SAAAM,GACdA,EAAMU,UACN,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGZ,EAAMa,OAAOf,KAAOc,EAAUZ,EAAMa,OAAOf,MAAQ,O,EAI/DgB,cAAgB,WAEZ,OADc,EAAKL,MAAMP,KAAO,EAAKO,MAAMN,QAAU,EAAKM,MAAML,K,EAIpEE,gBAAkB,WACd,OAAOS,KAAKC,MAAO,IAAM,EAAKF,gBAAmB,EAAKL,MAAMP,O,uDAMhE,OACE,oCACE,kBAACb,EAAD,CAASC,MAAO,yBACd,kBAACE,EAAD,CACEC,QAASwB,OAAOC,KAAKC,KAAKV,OAC1Bf,cAAeyB,KAAKzB,iBAGxB,kBAACL,EAAD,CAASC,MAAO,cACP6B,KAAKL,gBAAkB,EACpB,kBAAC,EAAD,CACIZ,KAAMiB,KAAKV,MAAMP,KACjBC,QAASgB,KAAKV,MAAMN,QACpBC,IAAKe,KAAKV,MAAML,IAChBC,MAAOc,KAAKL,gBACZR,gBAAiBa,KAAKb,oBAE1B,sD,GAvCac,a,YCLjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ac853349.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Section({ title, children }) {\r\n    return (\r\n        <>\r\n            <h2>{title}</h2>\r\n            <div>{children}</div>\r\n        </>\r\n    )\r\n};","import React from 'react';\r\n\r\nexport function Feedback({ options, feedbackEvent }) {\r\n  return (\r\n    <>\r\n      {options.map(el => (\r\n          <button key={el} name={el} onClick={event => feedbackEvent(event)}>\r\n          {el}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const Statistic = ({ good, neutral, bad, total, countPercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {countPercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Section } from './section/Section.js';\r\nimport { Feedback } from './feedback/Feedback.js';\r\nimport { Statistic } from './statistic/Statistic.js';\r\n\r\nconst objState = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n};\r\n\r\nexport default class App extends Component {\r\n    state = { ...objState };\r\n\r\n  feedbackEvent = event => {\r\n    event.persist();\r\n    this.setState(prevState => {\r\n      return { [event.target.name]: prevState[event.target.name] + 1 };\r\n    });\r\n    };\r\n\r\n    totalFeedback = () => {\r\n        const total = this.state.good + this.state.neutral + this.state.bad;\r\n        return total;\r\n    }\r\n\r\n    countPercentage = () => {\r\n        return Math.round((100 / this.totalFeedback()) * this.state.good)\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={'Please leave feedback'}>\r\n          <Feedback\r\n            options={Object.keys(this.state)}\r\n            feedbackEvent={this.feedbackEvent}\r\n          />\r\n        </Section>\r\n        <Section title={'Statistics'}>\r\n                {this.totalFeedback() > 0 ? (\r\n                    <Statistic\r\n                        good={this.state.good}\r\n                        neutral={this.state.neutral}\r\n                        bad={this.state.bad}\r\n                        total={this.totalFeedback()}\r\n                        countPercentage={this.countPercentage()}\r\n                    />\r\n                ) : <p>No feedback given</p>}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport 'modern-normalize/modern-normalize.css';\nimport './components/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}